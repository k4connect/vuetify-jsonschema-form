import{m as P,a as I,u as T}from"./tag.BZewxweC.js";import{N as k,O,z as s,Z as N,ag as H,$ as R,at as L,ah as F,c as b,X as G,az as a}from"./entry.B8oTM9XL.js";import{g as B,n as K}from"./VList.Bz-QtjpJ.js";import{b as Y,d as W,h as J,w as Z,u as Q,n as X,r as ee,V as d}from"./index.B0V51VOD.js";const te=k({text:String,...P(),...I()},"VToolbarTitle"),ie=O()({name:"VToolbarTitle",props:te(),setup(e,i){let{slots:t}=i;return T(()=>{const n=!!(t.default||t.text||e.text);return s(e.tag,{class:["v-toolbar-title",e.class],style:e.style},{default:()=>{var o;return[n&&s("div",{class:"v-toolbar-title__placeholder"},[t.text?t.text():e.text,(o=t.default)==null?void 0:o.call(t)])]}})}),{}}}),se=[null,"prominent","default","comfortable","compact"],oe=k({absolute:Boolean,collapse:Boolean,color:String,density:{type:String,default:"default",validator:e=>se.includes(e)},extended:Boolean,extensionHeight:{type:[Number,String],default:48},flat:Boolean,floating:Boolean,height:{type:[Number,String],default:64},image:String,title:String,...Y(),...P(),...W(),...J(),...I({tag:"header"}),...N()},"VToolbar"),Hl=O()({name:"VToolbar",props:oe(),setup(e,i){var m;let{slots:t}=i;const{backgroundColorClasses:n,backgroundColorStyles:o}=Z(H(e,"color")),{borderClasses:V}=Q(e),{elevationClasses:z}=X(e),{roundedClasses:D}=ee(e),{themeClasses:M}=R(e),{rtlClasses:_}=L(),l=F(!!(e.extended||(m=t.extension)!=null&&m.call(t))),p=b(()=>parseInt(Number(e.height)+(e.density==="prominent"?Number(e.height):0)-(e.density==="comfortable"?8:0)-(e.density==="compact"?16:0),10)),c=b(()=>l.value?parseInt(Number(e.extensionHeight)+(e.density==="prominent"?Number(e.extensionHeight):0)-(e.density==="comfortable"?4:0)-(e.density==="compact"?8:0),10):0);return G({VBtn:{variant:"text"}}),T(()=>{var y;const E=!!(e.title||t.title),U=!!(t.image||e.image),u=(y=t.extension)==null?void 0:y.call(t);return l.value=!!(e.extended||u),s(e.tag,{class:["v-toolbar",{"v-toolbar--absolute":e.absolute,"v-toolbar--collapse":e.collapse,"v-toolbar--flat":e.flat,"v-toolbar--floating":e.floating,[`v-toolbar--density-${e.density}`]:!0},n.value,V.value,z.value,D.value,M.value,_.value,e.class],style:[o.value,e.style]},{default:()=>[U&&s("div",{key:"image",class:"v-toolbar__image"},[t.image?s(d,{key:"image-defaults",disabled:!e.image,defaults:{VImg:{cover:!0,src:e.image}}},t.image):s(B,{key:"image-img",cover:!0,src:e.image},null)]),s(d,{defaults:{VTabs:{height:a(p.value)}}},{default:()=>{var h,g,f;return[s("div",{class:"v-toolbar__content",style:{height:a(p.value)}},[t.prepend&&s("div",{class:"v-toolbar__prepend"},[(h=t.prepend)==null?void 0:h.call(t)]),E&&s(ie,{key:"title",text:e.title},{text:t.title}),(g=t.default)==null?void 0:g.call(t),t.append&&s("div",{class:"v-toolbar__append"},[(f=t.append)==null?void 0:f.call(t)])])]}}),s(d,{defaults:{VTabs:{height:a(c.value)}}},{default:()=>[s(K,null,{default:()=>[l.value&&s("div",{class:"v-toolbar__extension",style:{height:a(c.value)}},[u])]})]})]})}),{contentHeight:p,extensionHeight:c}}}),ae={title:"Strings",id:"string",description:"The default component used to render a string property is the text field.\n  \nYou can use a textarea by defining the `layout` keyword.",schema:{type:"object",properties:{text:{type:"string",title:"A simple string property",description:"A description displayed in a help message"},textarea:{type:"string",title:"A string in a textarea",layout:"textarea"}}}},re={title:"Numbers",id:"number",description:"The default component used to render a property with type number or integer is an adapted text field.\n  \nIf the minimum and maximum attributes are defined, you can use a slider by defining the `layout` keyword.",schema:{type:"object",properties:{num:{type:"number",title:"A simple number property"},int:{type:"integer",title:"A simple integer property"},slider:{type:"integer",title:"An integer in a slider",minimum:0,maximum:100,layout:"slider"}}}},ne={title:"Booleans",id:"boolean",description:"The default component used to render a boolean property is the `checkbox`.\n  \n  You can use a `switch` or `radio` component instead of the default `checkbox` by defining the `layout` keyword.",schema:{type:"object",properties:{checkbox:{type:"boolean",title:"A simple boolean property"},switch:{type:"boolean",title:"A boolean in a switch",layout:"switch"}}}},le={title:"Simple properties",id:"simple-properties",description:"All simple data types and formats are mapped to default rendering components.\nA few extra components can be used instead of the defaults by completing the `layout` keyword. For example `layout: {comp: 'textarea'}` or the shorter alternative `layout: 'textarea'`",examples:[ae,re,ne]},pe={title:"Dates",id:"date",description:"The default component used to render a property with the `date` format is a date picker.",schema:{type:"object",properties:{date:{type:"string",format:"date",title:"A simple date"}}}},ce={title:"Colors",id:"color",description:"Use the component `color-picker` to input CSS colors (hex, rgb, etc).",schema:{type:"object",properties:{color:{type:"string",title:"A color",layout:"color-picker"}}}},de={title:"Markdown",id:"markdown",description:"Use the markdown component name to provide your users with a rich editor experience.",schema:{type:"string",layout:"markdown",title:"Some markdown"}},me={title:"Formats",id:"formats",description:"Some standard string formats are mapped to default rendering components.\n\n  These components can also be applied to strings without format information using the `layout` keyword.",examples:[pe,ce,de]},ue={title:"Enums and oneOfs",id:"enums-one-ofs",description:"Simple enums and oneOf expressions are rendered using a `select` components. If more than 20 items are returned the select will be replaced by a `autocomplete` component. If the data type is an array these components will be used in `multiple` mode.",schema:{type:"object",properties:{enum:{type:"string",title:"An enum",enum:["value1","value2"]},largeEnum:{type:"string",title:"A large enum",enum:["value1","value2","value3","value4","value5","value6","value7","value8","value9","value10","value11","value12","value13","value14","value15","value16","value17","value18","value19","value20","value21"]},oneOf:{type:"string",title:"A oneOf",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]},oneOfArray:{type:"array",title:"An array of oneOf",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]}}}}},ye={title:"Items from layout and context",id:"context",description:"It is possible to force rendering a `select` component and use data from outside the schema as a list of possible values. To do so you can use the `layout.items` property or write an expression in `layout.getItems`.",schema:{type:"object",properties:{fromLayout:{type:"string",title:"A select from items in layout",layout:{comp:"select",items:["value1",{title:"Value 2",value:"value2"}]}},fromContext:{type:"string",title:"A select from items in options.context",layout:{comp:"select",getItems:"options.context.selectItems1"}}}},options:{context:{selectItems1:["value1","value2"]}}},he={title:"Groups of checkboxes and radios",id:"groups",description:"The components `checkbox-group`, `switch-group` and `radio-group` offer alternative renderings.",schema:{type:"object",required:["radioOneOfs"],properties:{checkboxOneOfs:{type:"string",title:"Items rendered as checkboxes",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}],layout:"checkbox-group"},switchOneOfs:{type:"string",title:"Items rendered as switches",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}],layout:"switch-group"},radioOneOfs:{type:"string",title:"Items rendered as radio buttons",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}],layout:"radio-group"},checkboxOneOfsArray:{type:"array",title:"Array rendered as checkboxes",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]},layout:"checkbox-group"}}}},ge={title:"Selection controls",id:"selection",description:"There are multiple ways for a schema to describe a choice from an array of values. These situations can be rendered using different components.",examples:[ue,ye,he]},fe={title:"A simple file input",id:"simple",description:"Use the component `file-input` on an object node to support simple file uploading.",schema:{type:"object",properties:{file1:{title:"A simple file input",type:"object",layout:"file-input"}}}},be={title:"Files",id:"files",description:"It is possible to manage file uploads. The resulting data is a File object (see [MDN](https://developer.mozilla.org/en-US/docs/Web/API/File)) with a controllable serialization to JSON.",examples:[fe]},xe={title:"Simple property as items",id:"single-property",description:"Any field can be displayed as items in a list.",schema:{type:"object",properties:{strArray1:{type:"array",title:"An array of strings",items:{type:"string",title:"String item"}},nbArray1:{type:"array",title:"An array of numbers",items:{type:"number",title:"Number item"}}}}},ve={title:"Objects as items",id:"object-items",description:"The items can also be complex objects.",schema:{type:"object",properties:{objArray1:{type:"array",title:"An array of objects",items:{type:"object",title:"Object item",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"}}}}}}},we={title:"Strings with separator",id:"string-separator",description:"Any field can be displayed as items in a list.",schema:{type:"object",properties:{strSep1:{type:"string",title:"A string with values separated by a comma",layout:{separator:","}}}},data:{strSep1:"one,two,three"}},je={title:"Arrays",id:"arrays",description:"Arrays of strings or numbers are rendered with a combobox component. Editable arrays of other types are rendered as dynamic lists with actions like add, delete, sort, copy, etc",examples:[xe,ve,we]},$e={title:"Section",id:"section",description:"The default component used to render an object is a section.\n  \nThe title of the section can be derived from the `title` attribute of the object or from `layout.title`. An empty or null title will make the section into a simple container for its children.\n\nThe attribute `layout.option.titleDepth` can be used to configure the title tag (h1, h2, etc). Its default value is 2 and it is incremented automatically when nesting sections.",schema:{type:"object",title:"Invisible container",layout:{title:null},properties:{section:{type:"object",title:"Section",layout:{subtitle:"This section has a subtitle."},properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"},nestedSection:{type:"object",layout:{title:"Nested section"},properties:{str3:{type:"string",title:"String 3"}}}}}}}},Pe={title:"Section described in parent",id:"section-parent",description:"You might want to organize your properties into sections without adding actual object containers in your data.\n  \n  To do so you can define sections in the `layout.children` attribute of the parent node.",schema:{type:"object",layout:[{title:"Section 1",children:["str1","str2"]},{title:"Section 2",children:["str3"]}],properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"},str3:{type:"string",title:"String 3"}}}},Ie={title:"Tabs",id:"tabs",description:"Children of an object can be rendered into tabs using `layout: {comp: 'tabs'}` or the shorter `layout: 'tabs'.",schema:{type:"object",title:"Tabs",layout:"tabs",properties:{tab1:{type:"object",title:"Tab 1",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"}}},tab2:{type:"object",title:"Tab 2",properties:{str3:{type:"string",title:"String 1"}}}}}},Te={title:"Vertical tabs",id:"vertical-tabs",description:"Children of an object can be rendered into vertical tabs using `layout: {comp: 'vertical-tabs'}` or the shorter `layout: 'vertical-tabs'`.",schema:{type:"object",title:"Tabs",layout:"vertical-tabs",properties:{tab1:{type:"object",title:"Tab 1",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"}}},tab2:{type:"object",title:"Tab 2",properties:{str3:{type:"string",title:"String 1"}}}}}},ke={title:"Expansion panels",id:"expansion-panels",description:"Children of an object can be rendered into expansion panels using `layout: {comp: 'expansion-panels'}` or the shorter `layout: 'expansion-panels'.",schema:{type:"object",title:"Expansion panels",layout:"expansion-panels",properties:{panel1:{type:"object",title:"Panel 1",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"}}},panel2:{type:"object",title:"Panel 2",properties:{str3:{type:"string",title:"String 1"}}}}}},Oe={title:"Complex children",id:"complex-children",description:"You can organize your properties into multiple sorts of composite components without creating intermediate object levels in your schemas.\n  \nTo do so you have to define objects inside the `layout.children` attribute.",schema:{type:"object",title:"Complex children",layout:[{title:"Section 1",children:["str1"]},{comp:"tabs",title:"Tabs",children:[{title:"Tab 1",children:["str2"]},{title:"Tab 2",children:["str3"]}]},{comp:"expansion-panels",title:"Expansion panels",children:[{title:"Panel 1",children:["str4"]},{title:"Panel 2",children:["str5"]}]}],properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2"},str3:{type:"string",title:"String 3"},str4:{type:"string",title:"String 4"},str5:{type:"string",title:"String 5"}}}},Se={title:"Read-only children",id:"readonly-children",description:"The standard JSON Schema attribute `readOnly` can have multiple effect on children of a section depending on the `readOnlyPropertiesMode` option.",schema:{type:"object",properties:{section1:{type:"object",title:"Section with visible read-only children",layout:{readOnlyPropertiesMode:"show"},properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",readOnly:!0}}},section2:{type:"object",title:"Section with hidden read-only children",layout:{readOnlyPropertiesMode:"hide"},properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",readOnly:!0}}},section3:{type:"object",title:"Section with read-only children removed from the data",layout:{readOnlyPropertiesMode:"remove"},properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",readOnly:!0}}}}},data:{section1:{str1:"String 1 value",str2:"String 2 value"},section2:{str1:"String 1 value",str2:"String 2 value"},section3:{str1:"String 1 value",str2:"String 2 value"}}},Ae={title:"Composite components",id:"composite",description:"There are a few components available to structure the layout and wrap fields : sections, tabs, etc.",examples:[$e,Pe,Ie,Te,ke,Oe,Se]},qe={title:"Simple grid",id:"simple-grid",description:"All composite components like sections and tabs will render their children inside a 12 columns grid.\n  \nThe `layout.cols` property of each child is used to define the size of an element in this grid, this property can be expressed as a simple integer from 1 to 12 or as an object with keys `xs/sm/md/lg/xl/xxl`.\nIf `cols` is expressed as an object you can specify only the thresholds where you want the value to change, for example `layout: {cols: {md: 6}}` signifies that `xs` and `sm` will use the default value of 12 while all larger sizes will use 6.",schema:{type:"object",title:"A section containing a grid",properties:{str1:{type:"string",title:"12 cols default"},str2:{type:"string",title:"12 or 6 cols",layout:{cols:{md:6}}},str3:{type:"string",title:"12 or 6 cols",layout:{cols:{md:6}}},str4:{type:"string",title:"4 cols",layout:{cols:4}},str5:{type:"string",title:"8 cols",layout:{cols:8}}}}},Ce={title:"Grid defined from parent",id:"grid-parent",description:"The size of the children in the grid can also be expressed from the parent layout.",schema:{type:"object",title:"A section disposing children in a grid",layout:[{key:"str1"},{key:"str2",cols:{md:6}},{key:"str3",cols:{md:6}},{key:"str4",cols:4},{key:"str5",cols:8}],properties:{str1:{type:"string",title:"12 cols default"},str2:{type:"string",title:"12 or 6 cols"},str3:{type:"string",title:"12 or 6 cols"},str4:{type:"string",title:"4 cols"},str5:{type:"string",title:"8 cols"}}}},Ve={title:"Switch",id:"switch",description:"For more in depth customization of the responsive layout you can use the `display` parameter given to expressions.\n\nThis object can be used in a `switch` to change the component or any other layout option. For example the verticality of expansion panels might be better suited for smaller screens than the horizontality of tabs.",schema:{type:"object",layout:{switch:[{if:"display.mobile",comp:"expansion-panels",title:"Expansion panels in small containers"},{comp:"tabs",title:"Tabs in large containers"}]},properties:{obj1:{type:"object",title:"Section 1",properties:{str1:{type:"string",title:"String"}}},obj2:{type:"object",title:"Section 2",properties:{str1:{type:"string",title:"String"}}}}}},ze={title:"Responsive",id:"responsive",description:`Many elements of layouts can be made responsive to the width of the container element.
The default thresholds in pixels are \`{xs:0, sm:600, md:960, lg:1280, xl:1920, xxl:2560}\`.

A specificity of the responsivity of our layouts is that the width taken into account to apply thresholds is the width of each containers and not the width of the full window nor the width of the root container.`,examples:[qe,Ce,Ve]},De={title:"Default",id:"default",description:"The default density is very low, titles are big and there are large white spaces.",options:{density:"default"},schema:{type:"object",title:"A section",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",layout:"textarea"}}}},Me={title:"Comfortable",id:"comfortable",description:"The comfortable density is a well balanced middleground.",options:{density:"comfortable"},schema:{type:"object",title:"A section",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",layout:"textarea"}}}},_e={title:"Compact",id:"compact",description:"The compact density is very high, titles and margins are small.",options:{density:"compact"},schema:{type:"object",title:"A section",properties:{str1:{type:"string",title:"String 1"},str2:{type:"string",title:"String 2",layout:"textarea"}}}},Ee={title:"Density",id:"density",description:"Many vuetify components accept a density prop with possible values `default`, `comfortable` and `compact`.\n\nVjsf also accepts this parameter as an option. It is applied to all relevant vuetify components and is also used to modify title sizes, margins, etc.",examples:[De,Me,_e]},Ue={title:"Standard slots",id:"standard",description:"Standard slots shared accross all node types are `before`, `after` and `component`.\n  \nThe `before`, `after` slots are by default interpreted as containing some markdown code.",schema:{type:"object",properties:{text:{type:"string",title:"A string property",layout:{slots:{before:{text:"This is a simple text slot"},after:"This is a **markdown** slot"}}}}}},Ne={title:"Slots",id:"slots",description:"Some additional content can be injected in various places of the components tree using `slots`.\n  \nA slot can contain markdown content, simple textual content or reference some injected code by a name.",examples:[Ue]},He={title:"One of",id:"one-of",description:"A oneOf instructions is transformed into a select to chose the active subschema.",schema:{type:"object",title:"An object with a oneOf",oneOfLayout:{label:"Select a subschema"},oneOf:[{title:"oneOf 1",required:["str1"],properties:{key:{const:"oneOf1"},str1:{type:"string"}}},{title:"oneOf 2",required:["str2"],properties:{key:{const:"oneOf2"},str2:{type:"string"}}}]}},Re={title:"Combinations",id:"combine",description:"",examples:[He]},Le={title:"Simple errors",id:"simple-errors",description:"Validation is provided by [Ajv](https://ajv.js.org/). Errors on a simple property trigger a different rendering and the message is displayed.",schema:{type:"object",required:["str1"],properties:{str1:{type:"string",title:"A string property that only accepts uppercase letters",pattern:"^[A-Z]+$"}}},options:{initialValidation:"always"}},Fe={title:"Custom error messages",id:"error-messages",description:"It is possible to overwrite standard error messages thanks to [ajv-errors](https://ajv.js.org/packages/ajv-errors.html).",schema:{type:"object",required:["str1"],properties:{str1:{type:"string",title:"A string property that only accepts uppercase letters",pattern:"^[A-Z]+$",errorMessage:"use uppercase letters only"}}},options:{initialValidation:"always"}},Ge={title:"Section errors",id:"section-errors",description:"If an error is related to a section but cannot be rendered on a child simple property it is displayed as part of the header of the section.",schema:{type:"object",title:"A section with an error in a missing child",required:["missingChild"],properties:{str1:{type:"string",title:"A string property"}}},options:{initialValidation:"always"}},Be={title:"Composite errors",id:"composite-errors",description:"Composite components like tabs and expansion panels will signal errors inside one child using color and other accenting methods.",schema:{type:"object",layout:"tabs",required:["tab1","tab2"],properties:{tab1:{type:"object",required:["str1"],title:"Tab 1",properties:{str1:{type:"string",title:"A string property that only accepts uppercase letters",pattern:"^[A-Z]+$"}}},tab2:{type:"object",required:["str2"],title:"Tab 2",properties:{str2:{type:"string",title:"A string property that only accepts uppercase letters",pattern:"^[A-Z]+$"}}}}},options:{initialValidation:"always"}},Ke={title:"Validate on event",id:"validate-on",description:'Validation of the data is always calculated, but an additional information `validated` is used to determine if an error message should actually be displayed.\n  \nThe `validated` property of a simple property is true if:\n  - the whole form was validated\n  - or `options.initialValidation="always"`\n  - or `options.initialValidation="withData"` and the property is initialized with non-empty data\n  - or `options.validateOn="input"` and the user inputed some data\n  - or `options.validateOn="blur"` and the user focused on the property then left\n  \nThe option `initialValidation` can have the values `never`, `withData` and `always` (default is `withData`).\n\nThe option `validateOn` can have the values `input`, `blur` and `submit` (default is `input`).',schema:{type:"object",required:["str1"],properties:{str1:{type:"string",title:"A string property with erroneous initial data",pattern:"^[A-Z]+$"},str2:{type:"string",layout:{initialValidation:"never"},title:"A string property with erroneous initial data and initialValidation=never",pattern:"^[A-Z]+$"},str3:{type:"string",layout:{validateOn:"blur"},title:"A string property with validateOn=blur",pattern:"^[A-Z]+$"}}},data:{str1:"err",str2:"err",str3:""}},Ye={title:"Validation",id:"validation",description:"",examples:[Le,Fe,Ge,Be,Ke]},We={title:"Translated errors",id:"errors",description:"Error messages are translated using [ajv-i18n](https://github.com/ajv-validator/ajv-i18n).",schema:{type:"object",required:["str1"],properties:{str1:{type:"string",title:"A string property that only accepts uppercase letters",pattern:"^[A-Z]+$"}}},options:{initialValidation:"always",locale:"fr"}},Je={title:"Schemas",id:"schemas",description:"Schemas can contain internationalized labels thanks to a conventional `~$locale~` variable in ref paths.\n  \nThese refs will be resolved by replacing `~$locale~` with the current locale, and if the resolution fails it will attempted again with *en*.\n\nWarning: this resolution method is not a part of JSON schema or any other specification, schemas that use it will be incompatible with other tooling. You might want to use our method `resolveRefs` in your code:\n\n```js\nimport {resolveRefs} from '@json-layout/core\nresolveRefs(schema, ajv, locale)\n```\n",schema:{type:"object",required:["str1"],properties:{str1:{type:"string",title:{$ref:"#/i18n/~$locale~/str1"},pattern:"^[A-Z]+$"}},i18n:{en:{str1:"String 1"},fr:{str1:"Chaîne de caractères 1"}}},options:{locale:"fr"}},Ze={title:"Messages",id:"messages",description:"JSON layout uses a few messages by itself. These messages are internationalized and can be overwritten through the global options `messages` or locally on a node with `layout.messages`.",schema:{type:"array",title:"An array",layout:{messages:{addItem:"A custom addItem message"}},items:{properties:{str1:{type:"string",const:"key1"}}}}},Qe={title:"Internationalization",id:"i18n",description:"",examples:[We,Je,Ze]},S={title:"Many properties",id:"many-props",description:"A very basic example mostly interesting because it contains many properties and can be used to check that performance is ok in this case.",schema:{type:"object",properties:{str1:{type:"string"}}}};for(let e=0;e<200;e++)S.schema.properties[`obj_${e}`]={type:"object",properties:{str:{type:"string",default:`value ${e}`}}};const Xe={title:"Development",id:"_dev",description:"These examples are for developers working on special cases.",examples:[S]},A=[le,me,ge,be,je,Ae,ze,Ee,Ne,Re,Ye,Qe,Xe],et={title:"Text field",id:"text-field",description:"It is possible to specify [VTextField props and slots](https://vuetifyjs.com/en/api/v-text-field/).",schema:{type:"object",properties:{str1:{type:"string",title:"A text field with custom props and slots and using v-defaults-provider tu set variant",layout:{props:{appendIcon:"mdi-heart"},slots:{details:"custom-message"}}}}},codeSlots:["custom-message"],defaultProps:{VTextField:{variant:"outlined"}}},tt={id:"vuetify",title:"Vuetify integration",description:"",examples:[et]},it="basic",st="Basic types",ot="All basic types are supported : string, number, integer, boolean.",at={type:"object",properties:{stringProp:{type:"string",title:"I'm a string",description:"This description is used as a help message."},stringTextareaProp:{type:"string",title:"I'm a string in a textarea","x-display":"textarea"},numberProp:{type:"number",title:"I'm a number"},integerProp:{type:"integer",title:"I'm an integer"},integerSliderProp:{type:"integer",title:"I'm an integer in a slider","x-display":"slider",minimum:0,maximum:5},booleanProp:{type:"boolean",title:"I'm a boolean",description:"This description is used as a help message."},booleanSwitchProp:{type:"boolean",title:"I'm a boolean with switch display","x-display":"switch",description:"This description is used as a help message."},stringArrayProp:{type:"array",title:"I'm an array of strings",items:{type:"string"}},integerArrayProp:{type:"array",title:"I'm an array of integers",items:{type:"integer"}}}},rt={stringProp:"initial value",numberProp:10.1,integerProp:10,booleanProp:!0,stringArrayProp:["item 1","item 2"]},nt={id:it,title:st,description:ot,schema:at,model:rt},lt="date-picker",pt="Dates",ct='The "date-time" format is not supported yet.',dt=`The formats relative to dates are managed using the date and time pickers from Vuetify.

The formatting and the pickers are heavily dependant on the \`locale\` option. To customize the formatting you can look at the \`Formatting functions\` section in the configuration documentation.

You can define props for the underlying components using the timePickerProps and datePickerProps options.

Notes about timezone management:
  - Date-Times are stored with the user's timezone offset (for example 2020-04-03T21:07:43+02:00 instead of the usual result of \`toISOString\` 2020-04-03T19:07:43.152Z, this gives more contextual information to your application
  - Times alone are stored without representing the offset but also without applying it in the first place. Meaning that if the user select 00:00 we will store 00:00:00Z whatever his timezone. This is because without the context of a date timezone management becomes meaningless.`,mt={type:"object",properties:{dateProp:{type:"string",title:"I'm a simple date",format:"date",description:"This description is used as a help message."},timeProp:{type:"string",title:"I'm a simple time of day",format:"time"},dateTimeProp:{type:"string",title:"I'm a date with time",format:"date-time"}}},ut={},yt={id:lt,title:pt,warning:ct,description:dt,schema:mt,model:ut},ht="colors",gt="Colors",ft="The format `hexcolor` is used to display a color picker, you can also use the `x-display=color-picker` annotation. If using the format syntax, please note that hexcolor is not a standard format (I'm pretty sure it was once a proposal) and you might need to declare it with your JSON schema validator.\n\nExample ajv format: `ajv.addFormat('hexcolor', /^#[0-9A-Fa-f]{6,8}$/)`\n\nYou can customize the color picker using either the `colorPickerProps` option or the `x-props` annotation.\n",bt={type:"object",properties:{colorProp:{type:"string",title:"I'm a color",format:"hexcolor",description:"This description is used as a help message."},colorProp2:{type:"string",title:"I'm a color with a swatches based picker",format:"hexcolor","x-props":{showSwatches:!0,hideCanvas:!0,hideInputs:!0,hideModeSwitch:!0}}}},xt={},vt={id:ht,title:gt,description:ft,schema:bt,model:xt},wt="select",jt="Selects",$t='Enums, oneOfs with const values and the `x-fromData` annotation can be used to create select fields.\n\nArrays are represented as multi-value select fields.\n\nIf the number of items is too large the select is replaced by a auto-complete except if you force the use of a select using the `x-display=select` annotation.\n\nThe `selectAll` options can be used to add a "select all" action prepended to the list of items. It is only applied on multi-value select fields (not autocomplete).',x=e=>{const i=[];for(let t=0;t<e;t++)i.push((Math.random()+1).toString(36).substring(7));return i},Pt={type:"object",properties:{stringEnum:{type:"string",title:"I'm a string with values from an enum",enum:["value 1","value 2"],description:"This description is used as a help message."},stringsArrayEnum:{type:"array",title:"I'm an array of strings with values from an enum",items:{type:"string",enum:["value 1","value 2"]}},stringOneOf:{type:"string",title:"I'm a string with values/labels from a oneOf",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]},stringArrayOneOf:{type:"array",title:"I'm an array of strings with values/labels from a oneOf",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]}},stringEnumLarge:{type:"string",title:"I'm a string with values from a large enum",enum:x(25),description:"This description is used as a help message."},stringArrayEnumLargeSelect:{type:"array",title:"I'm an array with values from large enum rendered as a select",items:{type:"string",enum:x(25)},"x-display":"select"},stringContext:{type:"string",title:"I'm a string with values from the context","x-fromData":"context.items"},objectContext:{type:"object",title:"I'm an object with values from the context","x-fromData":"context.objectItems","x-itemKey":"val","x-itemTitle":"label"}}},It={context:{items:["value 1","value 2"],objectItems:[{val:"value1",label:"Value 1"},{val:"value2",label:"Value 2"}]},selectAll:!0},Tt={},kt={id:wt,title:jt,description:$t,schema:Pt,model:Tt,options:It},Ot="combobox",St="Comboboxes",At="Anything that can be represented as a select can also be represented as a combobox to allow the user to enter extra values. To do so you can:\n\n  - replace a constraining `enum` by `examples`\n  - replace a constraining `oneOf` by a `anyOf` with one open item that permits any extra value\n  - add the `x-display=combobox` annotation to properties with `x-fromUrl` or `x-fromData` annotations\n",qt={type:"object",properties:{examplesString:{type:"string",title:"I'm a string with some examples",default:"I'm a default value",examples:["I'm a suggested value","I'm another suggestion"]},examplesNumber:{type:"number",title:"I'm a number with some examples",default:1,examples:[11,22,33,44,55]},examplesStringArray:{type:"array",title:"I'm an array of strings with some examples",items:{type:"string",examples:["I'm a suggested value","I'm another suggestion"]}},anyOfString:{type:"string",title:"I'm a string with an open-ended anyOf",anyOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"},{}]},anyOfStringArray:{type:"array",title:"I'm an array of strings with an open-ended anyOf",items:{type:"string",anyOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"},{}]}},ajaxString:{type:"string",title:"I'm a string selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"title","x-display":"combobox"}}},Ct={},Vt={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},zt={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]}},Dt={id:Ot,title:St,description:At,schema:qt,model:Ct,options:Vt,httpMocks:zt},Mt="select-http",_t="Selects from HTTP",Et=`It is possible to fill selects using the results from HTTP requests.

Inject values coming from the context in the URL and transform the select in an autocomplete by including {q}.`,Ut={type:"object",properties:{selectAjaxString:{type:"string",title:"I'm a string selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href"},selectAjaxStringArray:{type:"array",items:{type:"string"},title:"I'm an array of strings selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"id","x-itemKey":"href"},selectAjaxObject:{type:"object",title:"I'm an object selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"},constProp:{type:"string",const:"a const value"}}},selectAjaxArrayOfObjects:{type:"array",title:"I'm an array of objects selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",items:{type:"object",properties:{href:{type:"string"},title:{type:"string"}}}},selectAjaxLarge:{type:"object",title:"I'm an object from a large HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&size=100&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"}}},selectAjaxObjectWithQuery:{type:"object",title:"I'm an object from a HTTP request with query","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q={q}&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"}}},selectAjaxStringWithQuery:{type:"string",title:"I'm a string from a HTTP request with query",description:"VJSF will attempt to fetch title for the stored value using the URL template, if missing the key property will displayed as it is","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q={q}&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"id"}}},Nt={selectAjaxStringWithQuery:"fete-de-la-science-2019"},Ht={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Rt={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q=&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&size=100&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q=fete-de-la-science-2019&owner=organization:5a5dc47163ebd4a6f438589b":{results:[{title:"Fête de la science 2019",owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b",name:"Koumoul",role:null},id:"fete-de-la-science-2019",userPermissions:["readDescription","readLines","getGeoAgg","getValuesAgg","getValues","getMetricAgg","getWordsAgg","downloadOriginalData","downloadFullData","readApiDoc","realtime-transactions","readLine","readLineRevisions","list"],public:!0,visibility:"public",description:"",previews:[],href:"https://koumoul.com/data-fair/api/v1/datasets/fete-de-la-science-2019",page:"https://koumoul.com/data-fair/dataset/fete-de-la-science-2019"}]}},Lt={id:Mt,title:_t,description:Et,schema:Ut,model:Nt,options:Ht,httpMocks:Rt},Ft="select-icons",Gt="Selects with icons",Bt=`It is possible to select icon values in many ways.

They can be described by code, by SVG values or by URLs.

Possible values can be listed in enums, oneOfs or fetched from HTTP requests.`,Kt={type:"object",properties:{iconEnum:{title:"I'm a simple select with icon codes in enum",type:"string","x-display":"icon",enum:["mdi-alarm","mdi-alarm-plus","mdi-alarm-off"]},iconEnumArray:{title:"I'm a multiple select with icon codes in enum",type:"array","x-display":"icon",items:{type:"string",enum:["mdi-alarm","mdi-alarm-plus","mdi-alarm-off"]}},iconOneOf:{title:"I'm a select with icon codes and titles in a oneOf",type:"string","x-display":"icon","x-itemIcon":"icon",oneOf:[{const:"alarm",title:"Alarm",icon:"mdi-alarm"},{const:"alarm-plus",title:"Alarm plus",icon:"mdi-alarm-plus"}]},iconAjaxImages:{title:"I'm a select based on HTTP requests with links to icons",type:"object","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}","x-itemKey":"name","x-itemTitle":"name","x-itemIcon":"_attachment_url","x-itemsProp":"results",properties:{name:{type:"string"},_attachment_url:{type:"string"}}},iconAjaxSVG:{title:"I'm a select based on HTTP requests with SVG code in response",type:"object","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}","x-itemKey":"name","x-itemTitle":"name","x-itemIcon":"svg","x-itemsProp":"results",properties:{name:{type:"string"},svg:{type:"string"}}}}},Yt={},Wt={"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q=":{results:[]}},Jt={selectAll:!0},Zt={id:Ft,title:Gt,description:Bt,schema:Kt,model:Yt,options:Jt,httpMocks:Wt},Qt="selection-controls",Xt="Selection controls",ei="It is possible to replace selects by radio, checkbox and switch groups using the `x-display` annotation with values `radio`, `checkbox` and `switch`.",ti={type:"object",properties:{stringEnum:{type:"string",title:"I'm a string with an enum and x-display=radio",description:"This description is used as a help message.",enum:["value 1","value 2"],"x-display":"radio"},stringsArrayEnum:{type:"array",title:"I'm an array with an enum and x-display=checkbox",description:"This description is used as a help message.",items:{type:"string",enum:["value 1","value 2"]},minItems:1,"x-display":"checkbox"},stringArrayOneOf:{type:"array",title:"I'm an array with a oneOf and x-display=switch",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]},"x-display":"switch"}},required:["stringEnum"]},ii={stringsArrayEnum:["value 1"]},si={id:Qt,title:Xt,description:ei,schema:ti,model:ii},oi="files",ai="Files",ri="A string property can be rendered as a file upload form if it has the `contentMediaType` attribute or the `x-display=file` annotation.\n\nAn object property can also be rendered as a file upload. In this case the name, type, size and lastModified subproperties will be filled with metadatas from the uploaded file. By default the data subproperty will contain a reference to a File/Blob object, except if you define its type as string.",ni={type:"object",properties:{pngProp:{type:"string",title:"I'm a PNG image stored as a base64 string",contentMediaType:"image/png",writeOnly:!0},imageProp:{type:"string",title:"I'm an image stored as a data url",contentMediaType:"image/*","x-options":{filesAsDataUrl:!0},writeOnly:!0},imageArrayProp:{type:"array",title:"I'm an array of images",items:{type:"string",contentMediaType:"image/*"},"x-options":{filesAsDataUrl:!0},writeOnly:!0},objectFileProp:{type:"object",title:"I'm a file as an object with base64 data",contentMediaType:"image/*",writeOnly:!0,properties:{name:{type:"string"},size:{type:"number"},type:{type:"string"},lastModified:{type:"string",format:"date-time"},data:{type:"string"}}},objectFileBlobProp:{type:"object",title:"I'm a file as an object with Blob data",contentMediaType:"image/*",writeOnly:!0,properties:{name:{type:"string"},size:{type:"number"},type:{type:"string"},lastModified:{type:"string",format:"date-time"}}},arrayFileBlobProp:{type:"array",title:"I'm an array of files as objects with Blob data",items:{type:"object",contentMediaType:"image/*",writeOnly:!0}}}},li={},pi={id:oi,title:ai,description:ri,schema:ni,model:li},ci="markdown-editor",di="Markdown editor (beta)",mi=`You can edit markdown content using the \`x-display=markdown\` annotation.

To do this Vjsf integrates [EasyMDE](https://github.com/Ionaru/easy-markdown-editor). But to prevent creating a larger distributable it is not declared as a dependency, you need to load it yourself and make it available in globalThis.EasyMDE (or window.EasyMDE). For example:

\`\`\`
import EasyMDE from 'easymde/dist/easymde.min.js'
 import 'easymde/dist/easymde.min.css'
 global.EasyMDE = EasyMDE
\`\`\`

  `,ui={type:"object",properties:{objectArrayProp:{type:"array",title:"I'm an array of objects","x-itemTitle":"titleProp",items:{type:"object",required:["titleProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"},markdownProp:{type:"string","x-display":"markdown",title:"I'm a markdown string"}}}}}},yi={objectArrayProp:[{titleProp:"This object has a markdown property",markdownProp:"This content is written in *Markdown* in a [dedicated editor](https://github.com/Ionaru/easy-markdown-editor)."}]},hi={editMode:"inline",plugins:{markdown:{easyMDEOptions:{minHeight:"300px",maxHeight:"300px"}}}},gi={id:ci,title:di,description:mi,schema:ui,model:yi,options:hi},fi={title:"Single properties",examples:[nt,yt,vt,kt,Lt,Zt,Dt,si,pi,gi]},bi="select-subschemas",xi="Selects of sub-schemas",vi="An object containing a `oneOf` or `anyOf` with varying properties can be represented as a select used to switch between the sub-schemas.\n\nA `const` property is required to be used as unique key of a `oneOf` element.",wi={type:"object",title:"Select a sub-schema",description:"Description displayed in a tooltip",oneOf:[{title:"I'm a sub-schema",properties:{schemaKey:{type:"string",const:"subSchema1"},stringProp1:{type:"string",title:"I'm a property in sub-schema 1"}}},{title:"I'm another sub-schema",properties:{schemaKey:{type:"string",const:"subSchema2"},stringProp2:{type:"string",title:"I'm a property in sub-schema 2"}}}]},ji={},$i={id:bi,title:xi,description:vi,schema:wi,model:ji},Pi="conditionals",Ii="Conditional content (if/then/else)",Ti="It is possible to toggle some properties by using the [conditional subschemas](https://json-schema.org/understanding-json-schema/reference/conditionals.html) if/then/else syntax. The simpler use-case is toggling some properties based on a boolean switch.\n\nThis functionality requires a JSON schema validator.\nIf you load third-party.js [Ajv](https://github.com/ajv-validator/ajv) will be used along with ajv-formats and ajv-i18n.\nOtherwise you can provide `Ajv`, `ajvAddFormats` and `ajvLocalize` as global variables or as options.",ki={type:"object",allOf:[{properties:{booleanConditionProp:{type:"boolean","x-display":"switch",title:"I'm a boolean used to toggle the content below"}},if:{required:["booleanConditionProp"],properties:{booleanConditionProp:{const:!0}}},then:{properties:{stringProp1:{type:"string",title:"I'm a string available if the boolean switch is true"}}},else:{properties:{stringProp2:{type:"string",title:"I'm another string available if the boolean switch is false"}}}},{properties:{numberCondition:{type:"integer",minimum:0,maximum:120,title:"I'm a number whose value is used to toggle content below"}},if:{required:["numberCondition"],properties:{numberCondition:{minimum:0,maximum:18}}},then:{properties:{stringProp3:{type:"string",title:"I'm a string available if the number condition is less than 18"}}}}]},Oi={booleanConditionProp:!0,numberCondition:10},Si={},Ai={id:Pi,title:Ii,description:Ti,schema:ki,model:Oi,options:Si},qi="_x-if",Ci="Conditional content (expression)",Vi="The JSON schema if/then/else syntax can be cumbersome and dependencies too limited. This is why vjsf accepts the `x-if` annotation that can contain en evaluated expression. See the [Expressions documentation](configuration#expressions).\n\n**WARNING:** this syntax is entirely ignored by a JSON schema validator, therefore you can create a situation where the form is valid but the model is actually invalid (for example if you use `x-if` on a property that is also required).\n\n",zi={type:"object",properties:{activeProp:{type:"string",title:"I'm a property rendered if the context contains a truthy value","x-if":"context.showActive"},inactiveProp:{type:"string","x-if":"context.showInactive"},conditionProp:{type:"string",title:"I'm a string whose content is used to evaluate an expression"},conditionalProp:{type:"string",title:`I'm here if previous prop is equal to "hello"`,"x-if":"parent.value.conditionProp  == 'hello'","x-options":{evalMethod:"evalExpr"}}},oneOf:[{"x-if":"context.showActive",title:"Active choice 1",properties:{type:{type:"string",const:"activeChoice1",title:"I'm a choice limited by expressions in a oneOf"}}},{"x-if":"context.showActive",title:"Active choice 2",properties:{type:{type:"string",const:"activeChoice2"}}},{"x-if":"context.showInactive",title:"Inactive choice",properties:{type:{type:"string",const:"inactiveChoice"}}}]},Di={conditionProp:"hello"},Mi={context:{showActive:!0,showInactive:!1}},_i={id:qi,title:Ci,description:Vi,schema:zi,model:Di,options:Mi},Ei="select-deps",Ui="Selects with dependencies",Ni=`It is possible to create a select based on values from another part of the model.

It is also possible to inject properties from the model inside the URL for an HTTP based select.`,Hi={type:"object",properties:{selectAjaxObject:{type:"object",title:"I'm an object from HTTP request used as source for next select","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"},schema:{type:"array"}}}},dependencies:{selectAjaxObject:{properties:{selectFromData:{type:"object",title:"I'm an object selected from a child array of the previous property","x-fromData":"selectAjaxObject.schema","x-itemTitle":"x-originalName","x-itemKey":"key"},selectAjaxDep:{type:"object",title:"I'm an object selected from HTTP request based on the first property","x-fromUrl":"{selectAjaxObject.href}/schema","x-itemTitle":"label","x-itemKey":"key"}}}}},Ri={},Li={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Fi={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]}},Gi={id:Ei,title:Ui,description:Ni,schema:Hi,model:Ri,options:Li,httpMocks:Fi},Bi="select-relative-deps",Ki="Selects with relative dependencies",Yi="It is possible to create a select based on values that are read relatively to the current property. Meaning that you can get the current item in an array for example.\n\nUse the special key `parent.value` to access the value of the parent property. You can also use `parent.parent.value`, etc.",Wi={type:"array",title:"I'm an array of objects",items:{type:"object",properties:{selectAjaxObject:{type:"object",title:"I'm an object from HTTP request used as source for next select","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"},schema:{type:"array"}}}},dependencies:{selectAjaxObject:{properties:{selectFromData:{type:"object",title:"I'm an object selected from a child array of the previous property","x-fromData":"parent.value.selectAjaxObject.schema","x-itemTitle":"x-originalName","x-itemKey":"key"},selectAjaxDep:{type:"object",title:"I'm an object selected from HTTP request based on the first property","x-fromUrl":"{parent.value.selectAjaxObject.href}/schema","x-itemTitle":"label","x-itemKey":"key"}}}}}},Ji=[],Zi={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Qi={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]}},Xi={id:Bi,title:Ki,description:Yi,schema:Wi,model:Ji,options:Zi,httpMocks:Qi},es="select-context-deps",ts="Selects with context dependencies",is="It is possible to create a select based on values that depend both on other parts of the model and on the context.",ss={type:"object",properties:{selectCategory:{type:"string",title:"I'm a string from a select that is used to suggest values in the next select",enum:["cat1","cat2"]}},dependencies:{selectCategory:{properties:{selectFromContext:{type:"string",title:"I'm a string from a select whose values come from the context and depend on the previous select","x-fromData":"context.categoryValues[modelRoot.selectCategory]"}}}}},os={},as={evalMethod:"newFunction",context:{categoryValues:{cat1:["c1-v1","c1-v2"],cat2:["c2-v1","c2-v2"]}}},rs={id:es,title:ts,description:is,schema:ss,model:os,options:as},ns="select-schema-deps",ls="Selects with schema dependencies",ps="Using eval-expr is not supported in VJSF 3.",cs="Using expressions in fromData it is possible to mix information from both other parts of the model and other parts of the schema.\n\nThis example illustrates this by reusing the oneOf list of values from a property in another while also filtering this oneOf using the current value of the first property. This creates a select based on the selected values of another select that also uses the proper titles.\n\nPlease note that this example requires the `evalMethod=evalExpr` or `evalMethod=newFunction` option. See the [Expressions documentation](configuration#expressions).",ds={type:"object",properties:{selectStringOneOf:{title:"I'm an array of strings from a oneOf definition",type:"array",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"},{const:"value3",title:"Value 3"},{const:"value4",title:"Value 4"}]}}},dependencies:{selectStringOneOf:{properties:{selectStringDep:{title:"I'm an an array of string from a dependency to other property values and schema",type:"array",items:{type:"string"},"x-fromData":"filterOneOfItem(item) = indexOf(item.const, parent.value.selectStringOneOf) != -1; filter(filterOneOfItem, parent.schema.properties.selectStringOneOf.items.oneOf)","x-itemTitle":"title","x-itemKey":"const"}}}}},ms={},us={evalMethod:"evalExpr"},ys={id:ns,title:ls,warning:ps,description:cs,schema:ds,model:ms,options:us},hs={title:"Dynamic content",examples:[$i,Ai,_i,Gi,rs,Xi,ys]},gs="sections",fs="Sections",bs="Children objects are rendered as sections if they have a title.\n\nIt is also possible to create sections without nesting levels in your schema by using `allOf`.\n\nThe rendering of sections is customized by the `sectionsClass` option (margins, and indenting) and the `sectionsTitlesClasses` (titles sizes ate different section depth).",xs={type:"object",properties:{objectSection1:{title:"I'm a section",description:"I'm a description shown as a paragraph on top of section",type:"object",properties:{stringProp1:{type:"string",title:"I'm a property in section 1"}}},objectSection2:{title:"I'm another section",type:"object",properties:{stringProp2:{type:"string",title:"I'm a property in section 2"}},allOf:[{title:"I'm a subsection","x-cols":6,properties:{stringProp3:{type:"string",title:"I'm a property in subsection 2.1"}}},{title:"I'm another subsection","x-cols":6,properties:{stringProp4:{type:"string",title:"I'm a property in subsection 2.2"}}}]}}},vs={},ws={id:gs,title:fs,description:bs,schema:xs,model:vs},js="sections-expansion-panels",$s="Sections as expansion panels",Ps='Use the `x-display="expansion-panels"` annotation to display sections as panels. You can also use the `rootDisplay` option to display root sections as panels regardless of the content of the schema.\n\nYou can use the `x-props`annotation to configure the rendering of a specific set of expansion panels and the `expansionPanelsProps` option to configure default rendering of any set of tabs.',Is={type:"object","x-props":{tile:!0,mandatory:!0},description:"I'm an object with sections rendered as expansions panels with the `tile` and `mandatory` options.",properties:{objectSection1:{title:"I'm a section",description:"I'm a description shown as a paragraph on top of section",type:"object",properties:{stringProp1:{type:"string",title:"I'm a property in section 1"}}},objectSection2:{title:"I'm another section",type:"object",properties:{stringProp2:{type:"string",title:"I'm a property in section 2"}}}}},Ts={},ks={rootDisplay:"expansion-panels"},Os={id:js,title:$s,description:Ps,schema:Is,model:Ts,options:ks},Ss="sections-tabs",As="Sections as tabs",qs='Use the `x-display="tabs"` annotation to display sections as tabs. You can also use the `rootDisplay` option to display root sections as tabs regardless of the content of the schema.\n\nYou can use the `x-props`annotation to configure the rendering of a specific set of tabs and the `tabsProps` option to configure default rendering of any set of tabs.',Cs={type:"object","x-display":"tabs","x-props":{grow:!0},description:"I'm an object with sections rendered as tabs.",allOf:[{title:"I'm a section",description:"I'm a description shown as a paragraph on top of section",type:"object",properties:{stringProp1:{type:"string",title:"I'm a property in section 1"}}},{title:"I'm another section",type:"object",oneOf:[{properties:{key:{type:"string",const:"type1",title:"type 1"},stringProp2:{type:"string",title:"I'm a property in section 2 / type 1"}}},{properties:{key:{type:"string",const:"type2",title:"type 2"},stringProp3:{type:"string",title:"I'm a property in section 2 / type 2"}}}]}]},Vs={},zs={id:Ss,title:As,description:qs,schema:Cs,model:Vs},Ds="sections-stepper",Ms="Sections as stepper",_s='Use the `x-display="stepper"` or `x-display="vertical-stepper"` annotation to display sections as a stepper. You can also use the `rootDisplay` option to display root sections as a stepper regardless of the content of the schema.\n\nYou can use the `x-props`annotation or the `stepperProps` / `verticalStepperProps` options to configure rendering.',Es={type:"object",properties:{stepperProp:{type:"object","x-display":"stepper",title:"I'm an object with sections rendered in a stepper.",allOf:[{title:"I'm a section",description:"I'm a description shown as a paragraph on top of section",type:"object",required:["stringProp1"],properties:{stringProp1:{type:"string",title:"I'm a required property in section 1"}}},{title:"I'm another section",type:"object",required:["stringProp2"],properties:{stringProp2:{type:"string",title:"I'm a required property in section 2"}}}]},verticalStepperProp:{type:"object","x-display":"vertical-stepper",title:"I'm an object with sections rendered in a vertical stepper.",allOf:[{title:"I'm a section",description:"I'm a description shown as a paragraph on top of section",type:"object",required:["stringProp1"],properties:{stringProp1:{type:"string",title:"I'm a required property in section 1"}}},{title:"I'm another section",type:"object",required:["stringProp2"],properties:{stringProp2:{type:"string",title:"I'm a required property in section 2"}}}]}}},Us={},Ns={id:Ds,title:Ms,description:_s,schema:Es,model:Us},Hs={title:"Sections",examples:[ws,Os,zs,Ns]},Rs="editable-array",Ls="Editable array",Fs="Arrays of objects are presented as an editable list of cards.\n\nEach item is validated separately and does not impact global form validity. Saving an item is blocked if it is not valid.\n\nThe list is sortable by dragging the card elements.\n\nThe most relevant options to customize the rendering of the arrays are `arrayItemColProps`, `arrayItemCardProps` and `disableSorting`.",Gs={type:"object",properties:{objectArrayProp:{type:"array",title:"I'm an array of objects",description:"This description is used as a help message.","x-itemTitle":"titleProp",items:{type:"object",required:["titleProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"},numberProp:{type:"number",title:"I'm a number"},booleanProp:{type:"boolean",title:"I'm a boolean"},selectProp:{type:"string",enum:["Value 1","Value 2"],title:"I'm a select"}},oneOf:[{title:"Object1",properties:{objectType:{type:"string",const:"object1",title:"Sub object type"},dateProp:{type:"string",format:"date",title:"I'm a date"}}},{title:"Object2",properties:{objectType:{type:"string",const:"object2"},colorProp:{type:"string",format:"hexcolor",title:"I'm a color"}}}]}}}},Bs={},Ks={hideReadOnly:!0},Ys={id:Rs,title:Ls,description:Fs,schema:Gs,model:Bs,options:Ks},Ws="editable-array-inline",Js="Editable array inline",Zs="Editable arrays can be rendered in an inline mode using the `editMode=inline` option.\n\nThe form will use much less dialogs. It is better in the case of nested editable arrays, where the overlapping dialogs become a mess.",Qs={type:"object",properties:{objectArrayProp:{type:"array",title:"I'm an array of objects","x-itemTitle":"titleProp",items:{type:"object",required:["titleProp","stringProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"},stringProp:{type:"string",title:"I'm another required string"},nestedObjectArrayProp:{type:"array",title:"I'm a nested array of objects","x-options":{arrayItemCardProps:{outlined:!0}},"x-itemTitle":"titleProp",items:{type:"object",required:["titleProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"},selectProp:{type:"string",title:"I'm a select",enum:["value 1","value 2","value 3"]}}}}}}}}},Xs={objectArrayProp:[{titleProp:"Object title",nestedObjectArrayProp:[{titleProp:"Nested object title"}]}]},eo={editMode:"inline"},to={id:Ws,title:Js,description:Zs,schema:Qs,model:Xs,options:eo},io="prefilled-arrays",so="Prefilled arrays",oo="Prefilled arrays based on HTTP requests are not supported yet in v3.",ao=`Arrays can be initialized using a list of values. In this case elements can be edited and sorted but it is not possible to add or remove them.

Objects used to initialize the array are fetched using similar methods as for select fields (fromData, fromUrl).`,ro={type:"object",properties:{filledArray:{type:"array",title:"I'm an array filled by HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&size=4&select=href,title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href","x-display":"list",items:{type:"object",properties:{href:{type:"string","x-display":"hidden"},title:{type:"string","x-display":"hidden"},additionalProp:{type:"string",title:"I'm an additional field"},icon:{type:"object",title:"Icone","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}","x-itemKey":"name","x-itemTitle":"name","x-itemIcon":"svg","x-itemsProp":"results",properties:{name:{type:"string"},svg:{type:"string"}},default:{name:"map-marker",svg:'<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="mdi-map-marker" width="24" height="24" viewBox="0 0 24 24"><path d="M12,11.5C10.62,11.5 9.5,10.38 9.5,9C9.5,7.62 10.62,6.5 12,6.5C13.38,6.5 14.5,7.62 14.5,9C14.5,10.38 13.38,11.5 12,11.5M12,2C8.13,2 5,5.13 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9C19,5.13 15.87,2 12,2Z" /></svg>'}}}}}}},no={filledArray:[{href:"https://koumoul.com/data-fair/api/v1/datasets/etablissements-finess-france",title:"Liste des établissements du domaine sanitaire et social",icon:{name:"map-marker",svg:'<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="mdi-map-marker" width="24" height="24" viewBox="0 0 24 24"><path d="M12,11.5C10.62,11.5 9.5,10.38 9.5,9C9.5,7.62 10.62,6.5 12,6.5C13.38,6.5 14.5,7.62 14.5,9C14.5,10.38 13.38,11.5 12,11.5M12,2C8.13,2 5,5.13 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9C19,5.13 15.87,2 12,2Z" /></svg>'}},{href:"https://koumoul.com/data-fair/api/v1/datasets/jep-2018-france",title:"Journées européennes du patrimoine en France Métropolitaine",icon:{name:"map-marker",svg:'<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="mdi-map-marker" width="24" height="24" viewBox="0 0 24 24"><path d="M12,11.5C10.62,11.5 9.5,10.38 9.5,9C9.5,7.62 10.62,6.5 12,6.5C13.38,6.5 14.5,7.62 14.5,9C14.5,10.38 13.38,11.5 12,11.5M12,2C8.13,2 5,5.13 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9C19,5.13 15.87,2 12,2Z" /></svg>'},additionalProp:"journées européennes"}]},lo={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},po={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&size=4&select=href,title&owner=organization:5a5dc47163ebd4a6f438589b":{count:2,results:[{id:"tour_1_resultats_par_pays_240417",title:"Présidentielles 2017 - Votes des français à l'étranger - 1er tour",owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b",name:"Koumoul",role:null},userPermissions:["readDescription","readLines","getGeoAgg","getValuesAgg","getValues","getMetricAgg","getWordsAgg","downloadOriginalData","downloadFullData","readApiDoc","realtime-transactions","readLine","readLineRevisions","list"],public:!0,visibility:"public",description:"",previews:[],href:"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417",page:"https://koumoul.com/data-fair/dataset/tour_1_resultats_par_pays_240417"},{id:"jep-2018-france",title:"Journées européennes du patrimoine en France Métropolitaine",owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b",name:"Koumoul",role:null},userPermissions:["readDescription","readLines","getGeoAgg","getValuesAgg","getValues","getMetricAgg","getWordsAgg","downloadOriginalData","downloadFullData","readApiDoc","realtime-transactions","readLine","readLineRevisions","list"],public:!0,visibility:"public",description:"",previews:[],href:"https://koumoul.com/data-fair/api/v1/datasets/jep-2018-france",page:"https://koumoul.com/data-fair/dataset/jep-2018-france"}]},"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q=":{total:4495,results:[{path:"ab-testing/ab-testing.svg","_file.content_type":"image/svg+xml","_file.content":"","_file.content_length":3,_rand:132845,svg:'<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="mdi-ab-testing" width="24" height="24" viewBox="0 0 24 24"><path d="M4 2A2 2 0 0 0 2 4V12H4V8H6V12H8V4A2 2 0 0 0 6 2H4M4 4H6V6H4M22 15.5V14A2 2 0 0 0 20 12H16V22H20A2 2 0 0 0 22 20V18.5A1.54 1.54 0 0 0 20.5 17A1.54 1.54 0 0 0 22 15.5M20 20H18V18H20V20M20 16H18V14H20M5.79 21.61L4.21 20.39L18.21 2.39L19.79 3.61Z" /></svg>',author:"Michael Richins",name:"ab-testing",_i:1569936485740,packVersion:"4.4.95",_attachment_url:"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-4.4.95/attachments/ab-testing/ab-testing.svg",version:"4.0.96",pack:"mdi",tags:"Developer / Languages",_score:null,_id:"ab-testing"}]}},co={id:io,title:so,warning:oo,description:ao,schema:ro,model:no,options:lo,httpMocks:po},mo="tuples",uo="Tuples",yo=`Arrays can be defined with multiple item schemas instead of just one. In this case the array has a fixed size and each item is rendered as a property.

This pattern is suitable for lat/lon pairs for example.

Note that to make items of the tuples required you can use the minItems attribute. If an item is filled all previous items are automatically required.`,ho={type:"object",properties:{numberTupleProp:{type:"array",title:"I'm a tuple of 2 numbers",items:[{type:"number",title:"I'm a number",default:0},{type:"number",title:"I'm another number",default:0}]},stringTupleProp:{type:"array",title:"I'm a tuple of 2 strings, first one is required",minItems:1,items:[{type:"string",title:"I'm a required string"},{type:"string",title:"I'm a string"}]}}},go={},fo={id:mo,title:uo,description:yo,schema:ho,model:go},bo="array-group",xo="Share items across arrays",vo="You can use the annotation `x-arrayGroup` to signify that some arrays share some common scope. In this case it should be possible to drag and drop or copy and paste items across these arrays.",wo={type:"object",properties:{arrayProp1:{type:"array",title:"Array 1","x-cols":6,"x-class":"px-1","x-itemTitle":"stringProp","x-arrayGroup":"array-group1",items:{type:"object",properties:{stringProp:{type:"string",title:"String prop"}}}},arrayProp2:{type:"array",title:"Array 2","x-cols":6,"x-class":"px-1","x-itemTitle":"stringProp","x-arrayGroup":"array-group1",items:{type:"object",properties:{stringProp:{type:"string",title:"String prop"}}}}}},jo={arrayProp1:[{stringProp:"hello"},{stringProp:"hello again"}],arrayProp2:[{stringProp:"hello array 2"}]},$o={editMode:"inline"},Po={id:bo,title:xo,description:vo,schema:wo,model:jo,options:$o},Io={title:"Arrays of objects",examples:[Ys,to,co,fo,Po]},To="validation-basic",ko="Basic validation",Oo="Some JSON schema syntax elements are translated as validation rules: required, length, pattern, etc.\n\nYou can also use the `x-rules` annotation to set custom rules indirectly as strings referencing functions in the `rules` option.\n\nIf you wrap the `vjsf` element in a `v-form` the validation mechanisms will work.\n\nClick on the button at bottom-right of the example to trigger validation.\n\nInitial display of validation errors is conditioned by the `initialValidation` option. By default the errors of properties with already filled values are displayed while pristine properties wait for user interactions or explicit call of `validate()`.",So={type:"object",required:["requiredStringProp"],properties:{requiredStringProp:{type:"string",title:"I'm a required string"},patternStringProp:{type:"string",title:"I'm a string with a pattern (letters only)",pattern:"^[a-zA-Z]*$",examples:["valid","not-valid"],"x-options":{messages:{pattern:"Only letters are accepted"}}},ruleStringProp:{type:"number",title:"I'm a number with a custom rule (even numbers only)","x-rules":["even"]},limitedInteger:{type:"integer",title:"I'm a integer with min/max value and bad initial value",minimum:0,maximum:100},limitedString:{type:"string",title:"I'm a string with min/max length and bad initial value",minLength:10,maxLength:100},limitedArray:{type:"array",title:"I'm an array with min/max items",items:{type:"string"},minItems:1,maxItems:100},patternStringArray:{type:"array",title:"I'm an array whose items have a pattern",items:{type:"string",pattern:"^[a-zA-Z]*$","x-options":{messages:{pattern:"Only letters are accepted"}}}},limitedObjectsArray:{type:"array",title:"I'm an array of objects with min/max items",items:{type:"object",properties:{stringProp:{type:"string"}}},minItems:2,maxItems:100}}},Ao={limitedInteger:101,limitedString:"abc"},qo={rules:{even:e=>!e||e%2===0||"Only even numbers accepted"}},Co={id:To,title:ko,description:Oo,schema:So,model:Ao,options:qo},Vo="validation-sections",zo="Sections validation",Do=`A section validity depends on the validity of all its children properties.

This is used to display an error color on broken tabs for example.

Click on the button at bottom-right of the example to trigger validation.`,Mo={type:"object",properties:{tabs:{type:"object",title:"Tabs with required fields","x-display":"tabs",properties:{section1:{type:"object",title:"Section 1",required:["requiredStringProp1"],properties:{requiredStringProp1:{type:"string",title:"I'm a required string with min/max length",minLength:10,maxLength:100}}},section2:{type:"object",title:"Section 2",required:["requiredStringProp2"],properties:{requiredStringProp2:{type:"string",title:"I'm another required string"}}}}},panels:{type:"object",title:"Panels with required fields","x-display":"expansion-panels",allOf:[{type:"object",title:"Section 1",required:["requiredStringProp1"],properties:{requiredStringProp1:{type:"string",title:"I'm a required string"}}},{type:"object",title:"Section 2",required:["requiredStringProp2"],properties:{requiredStringProp2:{type:"string",title:"I'm a required string with min/max length",minLength:10,maxLength:100}}}]}}},_o={tabs:{section1:{requiredStringProp1:"abc"}},panels:{requiredStringProp2:"abc"}},Eo={id:Vo,title:zo,description:Do,schema:Mo,model:_o},Uo="validation-external",No="External validator",Ho=`You can use an external validation tool to handle more complex validation cases, like formats rules combinations with anyOf/oneOf/allOf, etc. Activate this functionality with the \`useValidator=true\` option.

The messages will often be less intuitive than when they are created by vjsf itself based on simple rules, but this mechanism can help prevent outputting invalid data.

This functionality requires a [JSON schema validator](configuration#validator).`,Ro={type:"object",required:["stringPropWithFormats"],"x-display":"tabs",properties:{stringPropWithFormats:{title:"I'm a string with combined validation rules","x-options":{useAjv:!0},anyOf:[{format:"email",type:"string"},{format:"uri",type:"string"}]},invalidSection:{type:"object",title:"Invalid section",description:"This section has a required property that is not actually defined in the schema, it can never be valid.",required:["stringProp1","stringProp2"],properties:{stringProp2:{type:"string",title:"I'm a required string prop"}}}}},Lo={},Fo={useValidator:!0,locale:"en"},Go={id:Uo,title:No,description:Ho,schema:Ro,model:Lo,options:Fo},Bo={title:"Validation",examples:[Co,Eo,Go]},Ko="default-values",Yo="Default values",Wo='The "default" keyword from JSON schema is used to initialize values when they are undefined in the model.',Jo={type:"object",properties:{stringProp:{type:"string",title:"I'm a string",default:"I'm a default value"},objectSection:{type:"object",title:"I'm a section with a default value",default:{child1:"child 1 default value",child2:"child 2 default value"},properties:{child1:{type:"string"},child2:{type:"string"}}}}},Zo={},Qo={id:Ko,title:Yo,description:Wo,schema:Jo,model:Zo},Xo="nullable",ea="Nullable properties",ta=`Properties with basic types can support alternative "null" type.

In this case Vjsf will set null values when initializing empty properties or when clearing an existing property.`,ia={type:"object",properties:{stringProp:{type:["string","null"],title:"I'm a nullable string"},dateProp:{type:["string","null"],title:"I'm a clearable date",format:"date"},selectProp:{type:["string","null"],title:"I'm a clearable string from an enum",enum:["value 1","value 2",null]}}},sa={},oa={id:Xo,title:ea,description:ta,schema:ia,model:sa},aa="read-only",ra="Read only content",na="All properties with `readOnly=true` in schema will be rendered as a disabled field. This is propagated downward in the schema, so a read-only object will have all its children rendered as disabled field.\n\nYou can also disable the whole form using `disableAll=true` option.\n\nYou can hide a single property using the `x-display=hidden` annotation or hide by default all read-only properties using the `hideReadOnly=true` option.\n\nYou can also delete all read-only properties with the `deleteReadOnly=true` option.",la={type:"object",properties:{readOnlyProp:{type:"string",title:"I'm a read-only string",readOnly:!0},readOnlySection:{type:"object",title:"I'm a section with readOnly=true in schema",readOnly:!0,properties:{stringProp:{type:"string",title:"I'm a string in a read-only section",description:"This description is used as a help message."}}},disabledSection:{type:"object",title:"I'm a section with disableAll=true in options","x-options":{disableAll:!0},properties:{stringProp:{type:"string",title:"I'm a string in a disabled section"}}},hideReadonlySection:{type:"object",title:"I'm a section whose read-only content is hidden","x-options":{hideReadOnly:!0},properties:{readOnlyProp:{type:"string",readOnly:!0},stringProp:{type:"string",title:"I'm a string"},readOnlySection:{type:"object",title:"I'm a hidden section",readOnly:!0,properties:{stringProp:{type:"string"}}}}},deleteReadonlySection:{type:"object",title:"I'm a section whose read-only content is deleted","x-options":{deleteReadOnly:!0},properties:{stringProp:{type:"string",title:"I'm a string"},deletedReadOnlyProp:{type:"string",readOnly:!0},deletedReadOnlySection:{type:"object",title:"I'm a deleted section",readOnly:!0,properties:{stringProp:{type:"string"}}}}}}},pa={readOnlyProp:"read-only value",readOnlySection:{stringProp:"read-only value"},disabledSection:{stringProp:"disabled value"},deleteReadonlySection:{deletedReadOnlyProp:"deleted value",deletedReadOnlySection:{stringProp:"deleted value"}}},ca=e=>{},da={id:aa,title:ra,description:na,schema:la,model:pa,test:ca},ma={title:"Misc json-schema",examples:[Qo,oa,da]},ua="classes",ya="Layout, classes and styles",ha="You can define classes on the wrapping element of each property using the `x-class` annotation.\n\nTo write CSS rules directly on the wrapping element of a property use the `x-style` annotation.\n\nTo customize the responsive layout of your form you can use the `x-cols` annotation or the `fieldColProps` option.\n\nThere are also many options that can be used to apply classes to different parts of your form: `objectContainerClass`, `sectionsClass`, `sectionsTitlesClasses`, `childrenClass`, etc.",ga={type:"object",properties:{stringPropHalf:{type:"string",title:"I'm a half width string using x-cols","x-cols":6},stringPropHalf2:{type:"string",title:"I'm another half width string using fieldColProps option","x-options":{fieldColProps:{cols:6}}},stringPropClass:{type:"string",title:"I'm a string with class pl-10","x-class":"pl-10"},stringPropStyle:{type:"string",title:"I'm a string with style","x-style":"background-color: pink; padding-left: 20px;"}}},fa={},ba={id:ua,title:ya,description:ha,schema:ga,model:fa},xa="vuetify-props",va="Vuetify props",wa="The `x-props` annotation can be used to add properties to underlying Vuetify components.\n\nThis functionality is tightly coupled to Vuetify for simplicity and power.",ja={type:"object",properties:{chipsEnumProp:{type:"array",description:"I'm an array of strings from an enum with a bunch of additional props","x-props":{chips:!0,deletableChips:!0,soloInverted:!0,prependIcon:"mdi-heart"},items:{type:"string",enum:["value 1","value 2"]}}}},$a={chipsEnumProp:["value 1"]},Pa={id:xa,title:va,description:wa,schema:ja,model:$a},Ia="slots",Ta="Slots",ka="Each property has `before`, `after` and `default` slots. This is true for object containers, arrays, simple properties, etc. Before and after are handy mostly to display paragraphs of texts, titles, etc. Default can be used to entirely rewrite the way the property is rendered.\n\nYou can define any slot of the main underlying Vuetify component for each property (append, prepend, etc.).\n\nAll slots are passed either as textual content in a `x-slots` annotation in the schema (markdown supported) or as code inside the `<vjsf />` element with a prefix matching the key of the property in the schema.\n\nThe markdown parser can be defined using the `markdown` option. If you use the default third party dependencies it will be [markdown-it](https://github.com/markdown-it/markdown-it) and it will be initialized with the `markdownit` option. For example you can use `{markdownit: {html: true}}` to accept HTML tags inside the markdown content.\n\nYou can write code slots used for multiple properties by naming the slot with a `custom-` prefix and passing this name to the `x-display` annotation (see custom-string1 in this example).\n",Oa={type:"object",properties:{stringProp1:{type:"string",title:"I'm a property with Vuetify slots","x-slots":{"append-outer":"this is a markdown **slot**"},enum:["value 1","value 2"]},stringProp2:{type:"string",title:"I'm a property with a before/after/default slots","x-slots":{after:'this is a markdown **after slot** with some html <img width="20" src="https://cdn.vuetifyjs.com/images/logos/vuetify-logo-light.png">'}},stringProp3:{type:"string",title:"I'm a property with a custom display","x-display":"custom-string1"},object1:{type:"object",title:"I am an object containing properties with slots",properties:{stringProp11:{type:"string",title:"I'm a nested property with slots","x-slots":{"append-outer":"this is a markdown **slot**"}},stringProp12:{type:"string",title:"I'm a nested property with a custom display","x-display":"custom-string1"}}}},allOf:[{title:"I am an allOf section containing properties with slots",properties:{stringProp21:{type:"string",title:"I'm a property in a allOf with a before/after/default slots","x-slots":{after:'this is a markdown **after slot** with some html <img width="20" src="https://cdn.vuetifyjs.com/images/logos/vuetify-logo-light.png">'}}}}]},Sa={},Aa=`<vjsf v-model="model" :schema="schema" :options="options">
  <template slot="stringProp1-prepend">
    this is a Vuetify code slot
  </template>
  <template slot="stringProp2-before" slot-scope="slotProps">
    this is a code slot before 2nd property (slot props={{Object.keys(slotProps)}}).
  </template>
  <template slot="stringProp2" slot-scope="{value, on}">
    <p class="mt-4">this is the default slot of the 2nd property <input type="text" :value="value" v-on="on" style="border:1px solid red;">.</p>
  </template>
  <template slot="object1.stringProp11-before" slot-scope="slotProps">
    this is a code slot before nested property
  </template>
  <template slot="allOf-0.stringProp21-before" slot-scope="slotProps">
    this is a code slot before allOf property
  </template>
  <template slot="allOf-0.stringProp21" slot-scope="{value, on}">
    <p class="mt-4">this is the default slot of the 2nd property <input type="text" :value="value" v-on="on" style="border:1px solid red;">.</p>
  </template>
  <template slot="custom-string1" slot-scope="{value, label, on}"><p class="mt-4">
    {{label}} <input type="text" :value="value" v-on="on" style="border:1px solid green;">.</p>
  </template>
</vjsf>`,qa={markdownit:{html:!0}},Ca={id:Ia,title:Ta,description:ka,schema:Oa,model:Sa,template:Aa,options:qa,skip:!0},Va="slots-wrappers",za="Slots and components",Da=`The slots can be used to extend vjsf capabilities by integrating third-party elements.

It is recommended to write wrapper components that create the bridge between vjsf and the integrated components.

This example uses the wrapper components available [here](https://github.com/koumoul-dev/vuetify-jsonschema-form/tree/master/doc/components/wrappers). Note that these are only examples that you can duplicate and adapt to your needs, they might be completed and extracted in separate modules for direct reuse later on.`,Ma={type:"object",properties:{arrayProp:{type:"array",title:"I'm an array of objects rendered using custom components",items:{type:"object",required:["htmlProp","markdownProp"],properties:{htmlProp:{type:"string",title:"I'm a HTML string",description:"This custom component uses [tiptap](https://tiptap.dev/) through [tiptap-vuetify](https://github.com/iliyaZelenko/tiptap-vuetify).","x-display":"custom-tiptap"},markdownProp:{type:"string",title:"I'm a markdown string",description:"This custom component uses [Toast UI editor](https://github.com/nhn/tui.editor).","x-display":"custom-toast-ui-editor"},avatarProp:{type:"string",title:"I'm a base64 png image string",description:"This custom component uses [cropperjs](https://github.com/fengyuanchen/cropperjs)/[vue-cropperjs](https://www.npmjs.com/package/vue-cropperjs).","x-display":"custom-avatar"}}}},MeasurementFile:{title:" ",description:"Upload measurement .JSON file.",type:"string",writeOnly:!0,contentMediaType:"application/json","x-display":"custom-table",displayTable:{validation:{apple:{path:".fruits.apple",rules:{maximum:100,minimum:10,precision:0}},orange:{path:".fruits.orange",rules:{maximum:100,minimum:11,precision:0}},pea:{path:".vegetables.round.pea",rules:{maximum:100,minimum:10,precision:0}},carrot:{path:".vegetables.long.carrot",rules:{maximum:5,minimum:0,precision:0}}}}}}},_a={arrayProp:[{htmlProp:"<b>initial content</b>",markdownProp:"**initial content**"}],MeasurementFile:`{
    "fruits": {
      "apple": 20,
      "orange": 10
    },
    "vegetables": {
      "round": {
        "pea": 300
      },
      "long": {
        "carrot": 2
      }
    }
  }`},Ea=`<vjsf v-model="model" :schema="schema" :options="options">
  <template slot="custom-tiptap" slot-scope="context">
    <vjsf-tiptap v-bind="context" />
  </template>
  <template slot="custom-toast-ui-editor" slot-scope="context">
    <vjsf-toast-ui-editor v-bind="context" />
  </template>
  <template slot="custom-avatar" slot-scope="context">
    <vjsf-crop-img v-bind="context" />
  </template>
  <template slot="custom-table" slot-scope="context">
      <vjsf-table v-bind="context" />
  </template>
</vjsf>`,Ua={editMode:"inline"},Na={id:Va,title:za,description:Da,schema:Ma,model:_a,template:Ea,options:Ua,skip:!0},Ha="directives",Ra="Directives",La="You can use the `x-directives` annotation to instantiate Vue directives on the input components used to render properties. This is directly equal to the directives part of a [render data object](https://vuejs.org/v2/guide/render-function.html#The-Data-Object-In-Depth).",Fa={type:"object",properties:{stringWithMask:{type:"string",title:"I'm a string with a mask ####-##","x-directives":[{name:"mask",value:"####-##"}]}}},Ga={},Ba={id:Ha,title:Ra,description:La,schema:Fa,model:Ga},Ka="localization",Ya="Localization",Wa='Localization is managed at three levels:\n  - the `locale` option is passed to the components that can use it (notably the date-picker)\n  - the `messages` option is initialized with localized contents in one of the supported languages\n  - the `formats` option is initialized with formatting methods (date, etc.) that receive a locale as second parameter\n\nInternationalization of the contents of the schemas (titles and descriptions) falls mostly outside the scope of this library.\nYou should probably use some preprocessing on the schema before passing it to Vjsf.\nA possible solution is to use json refs that point to a dynamically modified section of the schema based on current locale.\nAs a convenience Vjsf replaces the string `~$locale~` with the current locale in all the refs it resolves, so that you can use something like this `"title": {"$ref": "#/i18n/~$locale~/mytitle"}` which is a limited solution to the problem.',Ja={type:"object",required:["selectAjaxWithQuery"],properties:{dateProp:{type:"string",title:{$ref:"#/i18n/~$locale~/datePropTitle"},format:"date"},selectAjaxWithQuery:{type:"object",title:{$ref:"#/i18n/~$locale~/selectAjaxWithQueryTitle"},"x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q={q}&owner=user:notARealUser","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"}}}},i18n:{en:{datePropTitle:"I`m a date without FR title",selectAjaxWithQueryTitle:"I`m a search field"},fr:{selectAjaxWithQueryTitle:"Je suis un champ de recherche"}}},Za={dateProp:"2012-12-31"},Qa={locale:"fr",formats:{date:(e,i)=>new Date(e).toLocaleDateString(i,{day:"numeric",month:"long",year:"numeric"})}},Xa={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q=&owner=user:notARealUser":{results:[]}},er={id:Ka,title:Ya,description:Wa,schema:Ja,model:Za,options:Qa,httpMocks:Xa},tr={title:"Advanced integration",examples:[ba,Pa,Ca,Na,Ba,er]},ir="_resolved_schema",sr="resolved schema",or="Test case around schema with $ref elements",ar={type:"object",properties:{stringProp:{type:"string",title:"I'm a string",description:"This description is used as a help message."},refProp1:{$ref:"#/definitions/prop"}},definitions:{prop:{type:"string",title:"I'm a prop resolved from a $ref"}}},rr={},nr={id:ir,title:sr,description:or,schema:ar,model:rr},lr="_select-filled-deps",pr="Selects with prefilled dependencies",cr="This can be buggy and we might lose the content of the dependency",dr={type:"object",properties:{selectAjaxObject:{type:"object",title:"I'm an object from HTTP request used as source for next select","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"},schema:{type:"array"}}}},dependencies:{selectAjaxObject:{properties:{selectFromData:{type:"object",title:"I'm an object selected from a child array of the previous property","x-fromData":"selectAjaxObject.schema","x-itemTitle":"x-originalName","x-itemKey":"key"},selectAjaxDep:{type:"object",title:"I'm an object selected from HTTP request based on the first property","x-fromUrl":"{selectAjaxObject.href}/schema","x-itemTitle":"label","x-itemKey":"key"}}}}},r=[{key:"Pays",type:"string","x-originalName":"Pays","x-cardinality":148,"x-refersTo":null},{key:"Candidats",type:"string","x-originalName":"Candidats","x-cardinality":11,enum:["Benoît HAMON","Emmanuel MACRON","François ASSELINEAU","François FILLON","Jacques CHEMINADE","Jean LASSALLE","Jean-Luc MÉLENCHON","Marine LE PEN","Nathalie ARTHAUD","Nicolas DUPONT-AIGNAN","Philippe POUTOU"],"x-refersTo":null},{key:"Nombre_de_voix",type:"integer","x-originalName":"Nombre de voix","x-cardinality":422,"x-refersTo":null},{"x-calculated":!0,key:"_id",type:"string",format:"uri-reference",title:"Identifiant",description:"Identifiant unique parmi toutes les lignes du jeu de données"},{"x-calculated":!0,key:"_i",type:"integer",title:"Numéro de ligne",description:"Indice de la ligne dans le fichier d'origine"},{"x-calculated":!0,key:"_rand",type:"integer",title:"Nombre aléatoire",description:"Un nombre aléatoire associé à la ligne qui permet d'obtenir un tri aléatoire par exemple"}],mr={selectAjaxObject:{href:"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417",title:"Présidentielles 2017 - Votes des français à l'étranger - 1er tour",schema:r},selectAjaxDep:{key:"Pays",type:"string","x-originalName":"Pays","x-cardinality":148,"x-refersTo":null,label:"Pays"},selectFromData:{key:"Pays",type:"string","x-originalName":"Pays","x-cardinality":148,"x-refersTo":null}},ur={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},yr={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{count:1,results:[{title:"Présidentielles 2017 - Votes des français à l'étranger - 1er tour",schema:r,href:"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417"}]},"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417":{schema:r},"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417/schema":r},hr={id:lr,title:pr,description:cr,schema:dr,model:mr,options:ur,httpMocks:yr},gr="_prefilled-select",fr="Prefilled Selects",br="Selects can have initial values and appear checked, as needed",xr={type:"object",properties:{arrayOneOf:{type:"array",title:"I'm an array with values/labels from a oneOf",items:{type:"string",oneOf:[{const:"value1",title:"Value 1"},{const:"value2",title:"Value 2"}]}}}},vr={},wr={arrayOneOf:["value1"]},jr={id:gr,title:fr,description:br,schema:xr,model:wr,options:vr},$r="_select-filled-http",Pr="Selects prefilled with http results",Ir=`This can be buggy and we can lose the pre-selected values.

Inject values coming from the context in the URL and transform the select in an autocomplete by including {q}.`,Tr={type:"object",properties:{selectAjaxString:{type:"string",title:"I'm a string selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"id"},selectAjaxStringUnknown:{type:"string",title:"I'm a string selected from results of an HTTP request with prefilled unknown value","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}&q={q}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"id"},selectAjaxObject:{type:"object",title:"I'm an object selected from results of an HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href",properties:{href:{type:"string"},title:{type:"string"}}}}},kr={selectAjaxString:"jep-2018-france",selectAjaxStringUnknown:"unknown value",selectAjaxObject:{href:"https://koumoul.com/data-fair/api/v1/datasets/tour_1_resultats_par_pays_240417",title:"Présidentielles 2017 - Votes des français à l'étranger - 1er tour"}},Or={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Sr={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q=&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&size=100&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b&q=":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b&q=unknown%20value":{results:[]}},Ar={id:$r,title:Pr,description:Ir,schema:Tr,model:kr,options:Or,httpMocks:Sr},qr="_readonly-select-icon",Cr="Readonly select with icons",Vr="Check rendering of readOnly select.",zr={type:"object",properties:{iconOneOf:{title:"I'm a select with icon codes and titles in a oneOf",type:"string","x-display":"icon","x-itemIcon":"icon",readOnly:!0,oneOf:[{const:"alarm",title:"Alarm",icon:"mdi-alarm"},{const:"alarm-plus",title:"Alarm plus",icon:"mdi-alarm-plus"}]}}},Dr={iconOneOf:"alarm"},Mr={id:qr,title:Cr,description:Vr,schema:zr,model:Dr},_r="_validation-extra-cases",Er="Additional validation cases",Ur="Cases not very informative for users, but useful for devs.",Nr={type:"object",required:["color1"],properties:{color1:{title:"I'm a required color with initial value",type:"string","x-display":"color-picker"}}},Hr={color1:"#00bcd4"},Rr={id:_r,title:Er,description:Ur,schema:Nr,model:Hr},Lr="_wrong-types",Fr="Ignore values with wrong type",Gr="Can happen both in case of invalid original data and incompatible schemas in a select.",Br={type:"object",properties:{string1:{title:"I'm a string with object as original data",type:"string"},string2:{title:"I'm a string with string as original data",type:"string"}},oneOf:[{properties:{type:{type:"string",const:"contentIsString1"},content:{type:"string"}}},{properties:{type:{type:"string",const:"contentIsString2"},content:{type:"string"}}},{properties:{type:{type:"string",const:"contentIsNumber"},content:{type:"number"}}},{properties:{type:{type:"string",const:"contentIsObject"},content:{type:"object",properties:{child:{type:"string"}}}}}]},Kr={string1:{test:"test"},string2:"test"},Yr={id:Lr,title:Fr,description:Gr,schema:Br,model:Kr},Wr="_large-form",Jr="Large form",Zr="Check that everything works smoothly on a quite large form.",Qr={type:"object",properties:{objectArrayProp:{type:"array",title:"I'm an array of objects","x-itemTitle":"titleProp",items:{type:"object",required:["titleProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"},numberProp:{type:"number",title:"I'm a number"},booleanProp:{type:"boolean",title:"I'm a boolean"},selectProp:{type:"string",enum:["Value 1","Value 2"],title:"I'm a select"}},oneOf:[{title:"Object1",properties:{objectType:{type:"string",const:"object1",title:"Sub object type"},dateProp:{type:"string",format:"date",title:"I'm a date"},childArrayProp:{type:"array",title:"A child array","x-itemTitle":"titleProp",items:{type:"object",required:["titleProp"],properties:{titleProp:{type:"string",title:"I'm a required string used as title"}}}}}},{title:"Object2",properties:{objectType:{type:"string",const:"object2"},colorProp:{type:"string",format:"hexcolor",title:"I'm a color"}}}]}}}},q={objectArrayProp:[]};for(let e=0;e<10;e++){const i={titleProp:"title "+e,numberProp:e,booleanProp:!!(e%2),selectProp:"Value "+(1+e%2)};e%2===0?(i.objectType="object1",i.dateProp=new Date().toISOString().slice(0,10),i.childArrayProp=[{titleProp:"child title 1 "+e},{titleProp:"child title 2 "+e}]):(i.objectType="object2",i.colorProp="#FF0000"),q.objectArrayProp.push(i)}const Xr={editMode:"inline"},en={id:Wr,title:Jr,description:Zr,schema:Qr,model:q,options:Xr},tn="_simple-array-validation",sn="Simple array with a required prop",on="Minimal case to check that validation works properly in in the case of editable arrays.",an={type:"object",properties:{arrayProp:{type:"array",title:"I'm an array of objects",items:{type:"object",required:["stringProp"],properties:{stringProp:{type:"string",title:"I'm a required string"}}}}}},rn={},nn={editMode:"inline"},ln={id:tn,title:sn,description:on,schema:an,model:rn,options:nn},pn="_nested_allof_oneof",cn="Nested allOfs and oneOfs",dn="Bug prone situation.",mn={type:"object",title:"A section with oneOf",description:"Description displayed in a tooltip",oneOf:[{type:"object",title:"I'm a sub-schema",properties:{type:{type:"string",const:"subSchema1"},stringProp1:{type:"string",title:"I'm a property in sub-schema 1"}}},{type:"object",title:"I'm another sub-schema",allOf:[{title:"a allOf section in sub-schema",properties:{stringProp2:{type:"string",title:"I'm a property in sub-schema 2"}}},{title:"another allOf section in sub-schema",properties:{stringProp3:{type:"string",title:"I'm another property in sub-schema 2"}}}],properties:{type:{type:"string",const:"subSchema2"}}}]},un={},yn={id:pn,title:cn,description:dn,schema:mn,model:un},hn="prefilled-array-wrong-type",gn="Prefilled array with wrong type in key property",fn="",bn={type:"object",properties:{colors:{title:"Couleurs et ordre",type:"array","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets/sitadel-logements/values_agg?field=RES_PRINCIP_OU_SECOND","x-display":"list","x-itemTitle":"value","x-itemKey":"value","x-itemsProp":"aggs",items:{type:"object",properties:{value:{type:"string","x-display":"hidden"},color:{type:"string",format:"hexcolor",default:"#828282","x-display":"color-picker"}}}}}},xn={},vn={},wn={"https://koumoul.com/data-fair/api/v1/datasets/sitadel-logements/values_agg?field=RES_PRINCIP_OU_SECOND":{total:659857,took:103,timed_out:!1,total_values:3,total_other:0,aggs:[{total:576903,value:1,results:[]},{total:59692,value:3,results:[]},{total:23262,value:2,results:[]}]}},jn={id:hn,title:gn,description:fn,schema:bn,model:xn,options:vn,httpMocks:wn},$n="prefilled-arrays-dependency",Pn="Prefilled array as a dependency",In="When selecting topic the change event should be emitted after all async operations are finished. See sharedData.asyncOperations in the code.",Tn={type:"object",properties:{selectTopic:{type:"string",oneOf:[{const:"m3CnrYBSi",title:"Société"},{const:"VD5-9NdWi",title:"Sport"}]}},dependencies:{selectTopic:{properties:{filledArray:{type:"array",title:"I'm an array filled by HTTP request","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&size=2&select=href,title&owner={context.owner.type}:{context.owner.id}&topics={selectTopic}","x-itemsProp":"results","x-itemTitle":"title","x-itemKey":"href","x-display":"list",items:{type:"object",properties:{href:{type:"string","x-display":"hidden"},title:{type:"string","x-display":"hidden"},icon:{type:"object",title:"Icone","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}","x-itemKey":"name","x-itemTitle":"name","x-itemIcon":"svg","x-itemsProp":"results",properties:{name:{type:"string"},svg:{type:"string"}},default:{name:"map-marker",svg:'<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="mdi-map-marker" width="24" height="24" viewBox="0 0 24 24"><path d="M12,11.5C10.62,11.5 9.5,10.38 9.5,9C9.5,7.62 10.62,6.5 12,6.5C13.38,6.5 14.5,7.62 14.5,9C14.5,10.38 13.38,11.5 12,11.5M12,2C8.13,2 5,5.13 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9C19,5.13 15.87,2 12,2Z" /></svg>'}}}}}}}}},kn={},On={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Sn={},An={id:$n,title:Pn,description:In,schema:Tn,model:kn,options:On,httpMocks:Sn},qn="_wrong-enum-value",Cn="Array inside a anyof with a value outside enum",Vn="This can create an infinite loop.",zn={},Dn={type:"object",properties:{array1:{type:"array",items:{type:"object",anyOf:[{properties:{key:{type:"string",const:"key"},string1:{type:"string",enum:["ok1","ok2"]}}}]}}}},Mn={array1:[{key:"key",string1:"ok1"},{key:"key",string1:"ko"}]},_n={id:qn,title:Cn,description:Vn,schema:Dn,model:Mn,options:zn},En="_enum_const",Un="Enum with a single item as const",Nn="Enum with a single item can be used as another way to express const. See issue #212.",Hn={type:"object",properties:{enumConst:{type:"string",enum:["value"]}}},Rn={},Ln={id:En,title:Un,description:Nn,schema:Hn,model:Rn},Fn="_separator",Gn="Multiple values in a single string",Bn="Use the x-separator or separator keyword.",Kn={type:"object",properties:{sepString:{type:"string",separator:","},sepSelect:{type:"string",separator:",","x-fromUrl":"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner={context.owner.type}:{context.owner.id}","x-itemsProp":"results","x-itemTitle":"id","x-itemKey":"id"}}},Yn={sepString:"test1,test2"},Wn={context:{owner:{type:"organization",id:"5a5dc47163ebd4a6f438589b"}}},Jn={"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&q=&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title,schema&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]},"https://koumoul.com/data-fair/api/v1/datasets?status=finalized&select=title&size=100&owner=organization:5a5dc47163ebd4a6f438589b":{results:[]}},Zn={id:Fn,title:Gn,description:Bn,schema:Kn,model:Yn,options:Wn,httpMocks:Jn},Qn="_infinite_loop",Xn="infinite loop",el="The empty string in default values along with the nesting can create some infinite loops",tl={type:"object",properties:{webhooks:{type:"array",title:"Liste d'appels extérieurs","x-sortable":!1,"x-itemTitle":"none",items:{type:"object",additionalProperties:!1,required:["title","events","target"],properties:{title:{type:"string",title:"Titre"},events:{type:"array",title:"Événements déclencheurs",items:{type:"string",oneOf:[{const:"dataset-dataset-created",title:"Un nouveau jeu de données a été créé"},{const:"dataset-data-updated",title:"Le fichier d'un jeu de données a été mis à jour"},{const:"dataset-error",title:"Un jeu de données a rencontré une erreur"},{const:"dataset-finalize-end",title:"Un jeu de données a été finalisé et mis en ligne"},{const:"dataset-publication",title:"Un jeu de données a été publié sur un catalogue"},{const:"dataset-downloaded",title:"Un jeu de données a été téléchargé dans un format fichier"},{const:"dataset-downloaded-filter",title:"Un extrait filtré d'un jeu de données a été téléchargé dans un format fichier"},{const:"application-application-created",title:"Une nouvelle réutilisation a été créée"},{const:"application-error",title:"Une réutilisation a rencontré une erreur"},{const:"application-publication",title:"Une réutilisation a été publiée sur un catalogue"}]}},target:{type:"object",required:["type"],oneOf:[{title:"Appel HTTP simple (compatible avec Slack et Mattermost)",properties:{type:{const:"http",title:"Type de cible"},params:{type:"object",required:["url"],properties:{url:{type:"string",title:"URL du serveur HTTP cible"}}}}},{title:"Google Analytics (ancien mode Universal Analytics)",properties:{type:{const:"ga"},params:{type:"object",required:["trackingId"],properties:{trackingId:{type:"string",title:"(GA) Identifiant du tracker"},appName:{type:"string",default:"",title:"(GA) Nom de l'application"},appVersion:{type:"string",default:"",title:"(GA) Version de l'application"}}}}},{title:"Google Analytics (nouveau mode Global site tag)",properties:{type:{const:"gtag"},params:{type:"object",required:["measurementId","apiSecret","eventName"],properties:{measurementId:{type:"string",default:"",title:"(GTAG) Identifiant de mesure",description:"Trouvez cet identifiant dans l'interface de Google Analytics > Administration > Flux de données > choisissez votre flux > ID DE MESURE"},apiSecret:{type:"string",default:"",title:"(GA) Secret d'API",description:"Trouvez cet identifiant dans l'interface de Google Analytics > Administration > Flux de données > choisissez votre flux > Codes secrets de l'API du protocole de mesure > Créer"},eventName:{type:"string",default:"",title:"(GTAG) Nom de l'événement",description:"Pas plus de 40 caractères, uniquement des lettres, chiffres et tirets bas.",pattern:"^[a-zA-Z0-9_]{0,40}$"}}}}}]}}}}}},il={webhooks:[]},sl={locale:"fr",arrayItemCardProps:{outlined:!0,tile:!0},editMode:"inline"},ol={id:Qn,title:Xn,description:el,schema:tl,model:il,options:sl},al="_rich-expression-array",rl="Rich expression Array",nl=`
    Check if in operator works to display input.
`,ll={type:"object",properties:{arrayProp:{type:"array",items:{type:"string",enum:["Hello","World"]}},conditionnalProp:{type:"string",title:"I'm here if  Hello is in arrayProp","x-if":"'Hello' in root.arrayProp"}}},pl={arrayProp:["Hello"]},cl={evalMethod:"evalExpr",editMode:"inline"},dl={id:al,title:rl,description:nl,schema:ll,model:pl,options:cl},ml="_array-oneof-title",ul="Array item titles from oneOf",yl="",hl={type:"object",properties:{arrayProp:{type:"array","x-itemTitle":"type",items:{type:"object",properties:{type:{type:"integer",oneOf:[{const:1,title:"One"},{const:2,title:"Two"}]},stringProp:{type:"string"}}}},arrayProp2:{type:"array","x-itemTitle":"type",items:{type:"object","x-itemKey":"type",oneOf:[{type:"object",title:"One",properties:{type:{const:1},stringProp:{type:"string"}}},{type:"object",title:"Two",properties:{type:{const:2},stringProp2:{type:"string"}}}]}}}},gl={arrayProp:[{type:1,stringProp:"hello"}],arrayProp2:[{type:1,stringProp:"hello"}]},fl={editMode:"inline"},bl={id:ml,title:ul,description:yl,schema:hl,model:gl,options:fl},xl="_readonly-options",vl="Readonly rendering options",wl="",jl={type:"object",properties:{array1:{type:"array",items:{type:"object",properties:{stringPropBasic:{type:"string"},stringPropHidden:{type:"string","x-options":{hideInArrayItem:!0}},stringPropHiddenLabel:{type:"string","x-options":{hideReadOnlyLabels:!0}},stringPropHiddenEmpty:{type:"string","x-options":{hideReadOnlyEmpty:!0}},stringPropHiddenTooltip:{type:"string","x-options":{hideReadOnlyTooltips:!0},description:"A tooltip"},stringPropHiddenProps:{type:"string","x-options":{readOnlyFieldProps:{label:"Readonly label"}}}}}},array2:{type:"array","x-options":{hideReadOnly:!0},items:{type:"object",properties:{stringPropBasic:{type:"string"},stringPropRO:{type:"string",readOnly:!0}}}},array3:{type:"array","x-options":{deleteReadOnly:!0},items:{type:"object",properties:{stringPropBasic:{type:"string"},stringPropRO:{type:"string",readOnly:!0}}}}}},$l={array1:[{stringPropBasic:"val 1",stringPropHidden:"val 1",stringPropHiddenLabel:"val with hidden label",stringPropHiddenEmpty:"val 1"},{stringPropBasic:"val 2",stringPropHidden:"val 2",stringPropHiddenLabel:"val 2"}],array2:[{stringPropBasic:"val 1",stringPropRO:"val 1"}],array3:[{stringPropBasic:"val 1",stringPropRO:"val 1"}]},Pl={editMode:"inline"},Il={id:xl,title:vl,description:wl,schema:jl,model:$l,options:Pl},Tl="_string_default",kl="String default values",Ol="The default value of a string should only be used if is string is not defined, but not if it is empty.",Sl={type:"object",properties:{stringEmpty:{type:"string",default:"Default value 1"},stringUndefined:{type:"string",default:"Default value 2"}}},Al={stringEmpty:""},ql={},Cl={id:Tl,title:kl,description:Ol,schema:Sl,model:Al,options:ql},Vl={title:"Development",color:"primary",examples:[nr,hr,Ar,jr,Mr,Rr,Yr,en,ln,yn,jn,An,_n,Ln,Zn,ol,dl,bl,Il,Cl]},zl=[fi,Hs,Io,hs,Bo,ma,tr,Vl],Dl={title:"Code slots",id:"code",description:"TODO",schema:{type:"object",properties:{text:{type:"string",title:"A text string",layout:{slots:{component:"custom-textarea"}}}}},codeSlots:["custom-textarea"]},v={slots:[Dl]},w={formats:{markdown:{warning:"This component requires the @koumoul/vjsf-markdown plugin."}}};var j,$;for(const e of A){v[e.id]&&e.examples.push(...v[e.id]);for(const i of e.examples)(j=w[e.id])!=null&&j[i.id]&&Object.assign(i,($=w[e.id])==null?void 0:$[i.id])}const C=[];for(const e of zl)for(const i of e.examples)C.push({...i,title:`${e.title} - ${i.title}`});const Ml={id:"v2-compat",title:"VJSF 2 compatibility",description:"The v2compat function can be used to produce a schema compatible with VJSF v3. Compatibility is not 100% please test your schemas.",examples:C},Rl=A.concat([tt,Ml]);export{Hl as V,Rl as e,oe as m};
