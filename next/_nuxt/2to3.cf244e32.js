import{_ as i}from"./code-block.5cf74c32.js";import{_ as l,I as s,x as o,m as r,s as t,t as c,v as u,y as e}from"./entry.5a540b02.js";import{V as p}from"./VContainer.762525b8.js";import"./tag.d88fbb9e.js";const m={data:()=>({title:"v2 to v3"}),head(){return{title:"VJSF - "+this.title}}},h={class:"text-h2 mb-8"},d=t("p",null,[e(" The old documentation for v2 is still available "),t("a",{href:"https://koumoul-dev.github.io/vuetify-jsonschema-form/2.x/"},"here"),e(". ")],-1),f=t("p",null," VJSF v3 is a complete rewrite. The motivation was to : ",-1),v=t("p",null,[t("ul",null,[t("li",null,"migrate to vue 3 and vuetify 3"),t("li",null,"rethink the annotations vocabulary and the options for more power and clarity"),t("li",null,"losen the coupling between schema structure and presentation while preserving simplicity"),t("li",null,"implement a saner reactivity model and hopefully see gains in performance and stability"),t("li",null,"fully validate the data (using Ajv) and offer a stronger guarantee that a valid form means a valid output data"),t("li",null,[e("extract all the core logic into a separate project ("),t("a",{href:"https://github.com/json-layout/json-layout"},"JSON Layout"),e(") to pave the way for implementations in other UI frameworks")]),t("li",null,"provide a compilation solution that allows the users to move as much pre-processing as possible (and the associated dependencies) to build time")])],-1),_=t("p",null," Being an entirely new major version of VJSF with a new vocabulary of annotations, breaking changes are inevitable. But a compatibility function is provided to help facilitate the migration. ",-1),y=t("pre",null,`import { v2compat } from '@koumoul/vjsf/compat/v2'
const v3Schema = v2compat(schema)
      `,-1);function g(a,b,w,k,x,V){const n=i;return r(),s(p,{class:"doc-content-page"},{default:o(()=>[t("h1",h,c(a.title),1),d,f,v,_,u(n,null,{default:o(()=>[y]),_:1})]),_:1})}const J=l(m,[["render",g]]);export{J as default};
